use * from common;
use mem;
use my;

const IDX_VERSION = 0;
const IDX_DEBUG_MODE = 1;
const IDX_DEBUG_FLAG = 2;
const IDX_LAST_CHECKPOINT = 3;
var exists:int;
var data:int[512] options(segment:"BSS_SAVEDATA");

public function init():void
{
	if( data[0] != data[IDX_VERSION] ) clear();
}

public function clear():void
{
	mem.zero(data, 512);
}

public function save():void
{
	data[IDX_VERSION] = SAVE_DATA_VERSION;
	data[IDX_DEBUG_MODE] = debug_mode;
	data[IDX_DEBUG_FLAG] = debug_flag;
	data[IDX_LAST_CHECKPOINT] = my.last_checkpoint;
	mem.copy( &data[16], my.items, my.ITEM_MAX);
	mem.copy( &data[48], my.flags, my.FLAG_MAX);
	mem.copy( &data[80], my.map_flag, my.MAP_FLAG_MAX);
}

public function load():void
{
	exists = data[IDX_VERSION];
	debug_mode = data[IDX_DEBUG_MODE];
	debug_flag = data[IDX_DEBUG_FLAG];
	my.last_checkpoint = data[IDX_LAST_CHECKPOINT];
	mem.copy( my.items, &data[16], my.ITEM_MAX);
	mem.copy( my.flags, &data[48], my.FLAG_MAX);
	mem.copy( my.map_flag, &data[80], my.MAP_FLAG_MAX);
}
