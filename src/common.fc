options(bank:-1);

include( "macro.rb" );

const DEBUG = 0;
var debug_mode:int;
var debug_flag:int;
const DEBUG_FLAG_TITLE_SKIP = 1<<0;
const DEBUG_FLAG_AUTO_SAVE = 1<<1;
const DEBUG_FLAG_FREEJUMP = 1<<2;

public function debug_on(mask:int):int options(fastcall:true)
{
	return debug_mode && debug_flag & mask;
}

const ITEM_PAL = incbin("../res/images/item.nespal");
const ITEM_TILEPAL = incbin("../res/images/item.tilepal");

const SAVE_DATA_VERSION = 11;

const SPR_ARROW = 20*4;
const SPR_BUBBLE = 20*4+2;
const SPR_SPLASH = 21*4;
const SPR_CURSOR = 22*4;
const SPR_MAP_FLAG = 28*4;

const CBANK_BG_COMMON = 0;
const CBANK_BG = 8;
const CBANK_SPRITE = 22;
const CBANK_ENEMY = 24;
const CBANK_TEXT = 30;
const CBANK_ITEM = 34;
const CBANK_MISC_TEXT = 38;
const CBANK_TITLE = 42;

const PBANK_MENU = 2;
const PBANK_EVENT = 2;
const PBANK_DEBUG_MENU = 2;
const PBANK_EN1 = 3;
const PBANK_EN2 = 4;
const PBANK_MY  = 5;
const PBANK_TITLE = 6;
const PBANK_FS = 7;

const VRAM_PALETTE = 0x3f00;

const GIFF_TABLE = [0,8,4,12, 2,10,6,14, 1,9,5,13, 3,11,7,15];
var anim:int;
var giff:int;

var debug:int[8] options(address:0x70);

var game_event:int;
var game_event_p1:int;

var scroll_x:int options(address: 0x68);

function gr_sprite2(x:int, y:int, pat:int, flag:int):void
{
	if( flag & (1<<6) ){
		ppu.sprite( x, y-8, pat, flag );
		ppu.sprite( x-8, y-8, pat+2, flag );
	}else{
		ppu.sprite( x, y-8, pat+2, flag );
		ppu.sprite( x-8, y-8, pat, flag );
	}
}

const DIR_VX:sint[] = [0,1,0,-1];
const DIR_VY:sint[] = [-1,0,1,0];
const DIR_UP = 0;
const DIR_RIGHT = 1;
const DIR_DOWN = 2;
const DIR_LEFT = 3;
const DIR_MASK_UP = 1 << DIR_UP;
const DIR_MASK_RIGHT = 1 << DIR_RIGHT;
const DIR_MASK_DOWN = 1 << DIR_DOWN;
const DIR_MASK_LEFT = 1 << DIR_LEFT;

const JUMP_SE = [0x00, 0x41, 0x4b, 0x55, 0x60, 0x6a, 0x74, 0x7f, 0x09, 0xc8,
				 0x01, 0x00, 0x04, 0x00, 0x12, 0xf1, 0xff, 0xa7, 0x0c, 0x00];

use nes;
use ppu;
use fs;
use bg;
use pad;
use mmc3;
use math;
use * from resource;
